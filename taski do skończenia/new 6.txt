#include <vector>
#include <algorithm>
#include <cmath>

std::vector<int> convertNumberToDigitsVector(int number) {
    std::vector<int> result;

    while (number) {
        result.push_back(number % 10);
        number /= 10;
    }
    std::reverse(result.begin(), result.end());

    return result;
}

int convertDigitsVectorToNumber(std::vector<int> digits) {
    int result = 0;

    for (int i = 0; i < digits.size(); i++) {
        result += digits[i] * pow(10, digits.size() - i - 1);
    }

    return result;
}

int solution(int A) {
    std::vector<int> inputDigits = convertNumberToDigitsVector(A);
    std::vector<int> outputDigits(inputDigits);

    for (int i = 0; i < outputDigits.size(); i++) {
        if (i % 2)
            outputDigits[i] = inputDigits[outputDigits.size() - i/2];
        else
            outputDigits[i] = inputDigits[i/2];
    }

    return convertDigitsVectorToNumber(outputDigits);
}
